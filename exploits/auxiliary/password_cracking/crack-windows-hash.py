import argparse
import hashlib
import binascii

def crack_windows_hash(hash_value, password_file):
    """
    Crack a Windows hash using a password list.

    Args:
        hash_value (str): The Windows hash value.
        password_file (str): The path to the file containing passwords.

    Returns:
        str: The password if found, None otherwise.
    """
    with open(password_file, 'r') as file:
        passwords = file.readlines()

    for password in passwords:
        password = password.strip()
        hash_obj = hashlib.new('md4', password.encode('utf-16le')).digest()
        if binascii.hexlify(hash_obj).decode() == hash_value:
            return password

    return None

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Crack Windows hashes using a password list.")
    parser.add_argument('hash_value', help="The Windows hash value.")
    parser.add_argument('password_file', help="The path to the file containing passwords.")
    args = parser.parse_args()

    password = crack_windows_hash(args.hash_value, args.password_file)
    if password:
        print(f"Password found: {password}")
    else:
        print("Password not found.")
