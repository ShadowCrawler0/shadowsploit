from scapy.all import *
from scapy.utils import PcapWriter
import re

def sniff_packets(interface, filename):
    # Open a PcapWriter to write packets to the file
    pcap_writer = PcapWriter(filename, append=True, sync=True)

    # Sniff packets on the specified interface
    sniff(iface=interface, prn=lambda packet: process_packet(packet, pcap_writer), store=False)

def process_packet(packet, pcap_writer):
    # Write the packet to the pcap file
    pcap_writer.write(packet)

    # Check if the packet contains cleartext credentials
    if packet.haslayer(Raw):
        # Extract the payload as a string
        try:
            payload = packet[Raw].load.decode("utf-8")
        except UnicodeDecodeError:
            payload = packet[Raw].load.decode("iso-8859-1")  # Try a different encoding
        # Use regular expressions to find potential credentials
        credentials = re.findall(r"(?i)(username|password|login|passwd|credential)[\s=:,]+(\w+)", payload)
        if credentials:
            print("Potential credentials found:")
            for credential in credentials:
                print(f"{credential[0]}: {credential[1]}")

# Start sniffing packets on the network interface
interface = input("Enter the interface to sniff on (e.g., eht0): ")
filename = input("Enter the filename to save the logs (e.g., logs.pcap): ")

sniff_packets(interface, filename)