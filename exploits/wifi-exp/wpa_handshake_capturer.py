from scapy.all import *
import os

eapol_packets = []
sae_commit_packets = []
cap_file = "handshake.cap"

def is_sae(pkt):
    return pkt.haslayer(Dot11Auth) and pkt[Dot11Auth].algo == 3

def packet_handler(pkt):
    global eapol_packets, sae_commit_packets

    # Filter packets by BSSID (target AP)
    if pkt.haslayer(Dot11):
        if pkt.addr2 != target_bssid and pkt.addr1 != target_bssid:
            return  # Ignore unrelated packets

    if pkt.haslayer(EAPOL):
        print(f"[WPA/WPA2] EAPOL Packet from {pkt.addr2} to {pkt.addr1}")
        eapol_packets.append(pkt)

    elif is_sae(pkt):
        print(f"[WPA3] SAE Auth Packet (Commit/Confirm) from {pkt.addr2} to {pkt.addr1}")
        sae_commit_packets.append(pkt)

    if len(eapol_packets) >= 4 or len(sae_commit_packets) >= 2:
        print("[âœ”] Handshake (WPA2 or WPA3) captured! Saving...")
        packets = eapol_packets + sae_commit_packets
        wrpcap(cap_file, packets)
        print(f"[+] Saved to {cap_file}")
        exit()

def capture(iface, channel):
    print(f"[*] Setting {iface} to channel {channel}...")
    os.system(f"iwconfig {iface} channel {channel}")

    print("[*] Sniffing for WPA/WPA2/WPA3 handshakes from", target_bssid)
    sniff(iface=iface, prn=packet_handler, store=0)

if __name__ == "__main__":
    iface = input("Monitor Mode Interface (e.g., wlan0mon): ").strip()
    target_bssid = input("Target AP BSSID (MAC address): ").strip().lower()
    channel = input("Target Channel (e.g., 6): ").strip()

    try:
        capture(iface, channel)
    except KeyboardInterrupt:
        print("\n[!] Stopped by user.")
        if eapol_packets or sae_commit_packets:
            wrpcap(cap_file, eapol_packets + sae_commit_packets)
            print(f"[+] Partial capture saved to {cap_file}")
        else:
            print("[x] No handshake captured.")
