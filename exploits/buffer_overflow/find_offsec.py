# find_offset.py
def generate_pattern(length):
    pattern = b""
    for a in b"ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        for b in b"abcdefghijklmnopqrstuvwxyz":
            for c in b"0123456789":
                if len(pattern) < length:
                    pattern += bytes([a]) + bytes([b]) + bytes([c])
                else:
                    return pattern
    return pattern[:length]

def find_offset(eip_hex, length=3000):
    pattern = generate_pattern(length)
    try:
        eip_bytes = bytes.fromhex(eip_hex)[::-1]
        index = pattern.find(eip_bytes)
        if index != -1:
            return index
        else:
            return "EIP value not found in pattern"
    except Exception as e:
        return f"Error: {e}"

def main():
    print("=== Offset Finder ===")
    eip = input("Enter EIP value (e.g., 39694438): ").strip()
    offset = find_offset(eip)
    print(f"[*] Offset found at: {offset}")

if __name__ == "__main__":
    main()
